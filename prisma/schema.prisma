generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "mysql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}
        
model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  username  String   @unique
  createdAt DateTime @default(now())
  profilePic String? // Add this line to include profile picture

  // Define relation fields for sent and received friend requests
  sentRequests     Friend[] @relation("SentRequests")
  receivedRequests Friend[] @relation("ReceivedRequests")

  // Goals created by the user
  createdGoals Goal[] @relation("GoalsCreatedByUser")

  // Goals where the user is assigned as a friend
  assignedGoals Goal[] @relation("FriendGoals")
}

model Friend {
  id         Int      @id @default(autoincrement())
  senderId   Int // User who sends the friend request
  receiverId Int // User who receives the friend request
  status     String   @default("pending") // "pending", "accepted", "rejected"
  createdAt  DateTime @default(now())

  // Define relations for sender and receiver
  sender   User @relation("SentRequests", fields: [senderId], references: [id])
  receiver User @relation("ReceivedRequests", fields: [receiverId], references: [id])
}

model Goal {
  id        Int      @id @default(autoincrement())
  userId    Int // User who created the goal
  title     String
  type      String // "Daily", "Weekly", etc.
  friendId  Int // Friend responsible for the goal
  status    String   @default("pending verification") // "pending verification", "rejected", "verified"
  evidencePath  String?
  createdAt DateTime @default(now())

  // Relation to the user who created the goal
  creator User @relation("GoalsCreatedByUser", fields: [userId], references: [id])

  // Relation to the friend responsible for the goal
  friend User @relation("FriendGoals", fields: [friendId], references: [id])
}
